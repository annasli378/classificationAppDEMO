import tkinter as tk
from tkinter import ttk, filedialog
from PIL import Image, ImageTk

"""
sources: 
https://pubs.rsna.org/doi/10.1148/radiol.213072
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8015401/
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8958819/
https://data.mendeley.com/datasets/rscbjbr9sj/2

"""
class MedicalApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Medical App")

        # Configure background color
        #self.root.configure(bg='lightgray')

        # Left Panel
        self.left_panel = ttk.Frame(self.root, padding=10)
        self.left_panel.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))

        self.patient_var = tk.StringVar()
        self.patient_var.set("Select Patient")
        patients = ["Patient 1", "Patient 2", "Patient 3", "Patient 4", "Patient 5"]
        self.patient_dropdown = ttk.Combobox(self.left_panel, textvariable=self.patient_var, values=patients,
                                             state='readonly', postcommand=self.load_patient)
        self.patient_dropdown.grid(row=0, column=0, pady=10, sticky=(tk.W, tk.E))

        self.info_label = tk.Message(self.left_panel)
        self.info_label.grid(row=1, column=0)


        # Middle Panel
        self.middle_panel = ttk.Frame(self.root, padding=10)
        self.middle_panel.grid(row=0, column=1, sticky=(tk.W, tk.E, tk.N, tk.S))

        self.image_display = ttk.Label(self.middle_panel, text="Chest X-ray", background='lightgray')
        self.image_display.grid(row=0, column=0, pady=10)

        self.text_entry = ttk.Entry(self.middle_panel, width=30)
        self.text_entry.grid(row=1, column=0, pady=10)

        # Right Panel
        self.right_panel = ttk.Frame(self.root, padding=10)
        self.right_panel.grid(row=0, column=2, sticky=(tk.W, tk.E, tk.N, tk.S))

        self.btn_use_ai = ttk.Button(self.right_panel, text="USE AI", command=self.use_ai, style='Green.TButton')
        self.btn_use_ai.grid(row=0, column=0, pady=10)

        self.btn_explain = ttk.Button(self.right_panel, text="EXPLAIN", command=self.explain, style='Green.TButton')
        self.btn_explain.grid(row=1, column=0, pady=10)

        self.message_label = ttk.Label(self.right_panel, text="")
        self.message_label.grid(row=2, column=0)

        self.message_display = ttk.Label(self.right_panel, text="")
        self.message_display.grid(row=3, column=0)


        # Configure column weights for resizing
        self.root.columnconfigure(0, weight=1)
        self.root.columnconfigure(1, weight=1)
        self.root.columnconfigure(2, weight=1)

        # Configure style for buttons
        self.root.style = ttk.Style()
        self.root.style.configure('Green.TButton', foreground='black', background='lightgreen')

    def load_patient(self):
        # Placeholder for the load patient action
        selected_patient = self.patient_var.get()
        if selected_patient != "Select Patient":
            # Placeholder for the load patient action
            image_path = f"patients/{selected_patient}.png"
            text_path = f"patients/{selected_patient}.txt"

            # Load and display the image
            image = Image.open(image_path)
            image = image.resize((500, 500))
            tk_image = ImageTk.PhotoImage(image)
            self.image_display.config(image=tk_image)
            self.image_display.image = tk_image  # Keep a reference to avoid garbage collection

            # Load and display the text file
            with open(text_path, 'r', encoding='utf-8') as file:
                patient_info = file.read()
                self.info_label.config(text=f"Patient Information:\n{patient_info}")

    def use_ai(self):
        # Placeholder for the use AI action
        self.message_display.config(text="AI is being used...")

    def explain(self):
        # Placeholder for the explain action
        self.message_display.config(text="Explanation generated by AI...")

if __name__ == "__main__":
    root = tk.Tk()
    app = MedicalApp(root)
    root.geometry("800x400")
    root.mainloop()
